@using webSITE.Areas.Dashboard.Models.FotoController
@model FotoPickerVM
@{
    string Id = string.Join("", Guid.NewGuid().ToString().Split("-"));
}

<!-- Tombol Pilihan Gambar -->

<div id="input-container@(Id)">
    @foreach (var id in Model.DaftarIdFoto)
    {
        <input type="text" name="@Model.Name" id="@Model.Name" class="form-control" value="@id" hidden />
    }
</div>
<div class="text-center">
    <button type="button" class="btn-custom mb-3" data-bs-toggle="modal" data-bs-target="#modal@(Id)">Pilih Foto</button>
</div>

<div class="row mb-3 justify-content-center align-items-center">
    <div id="previewFoto@(Id)" class="d-flex justify-content-center preview @(Model.Multi ? "multi" : "")">
        @foreach (var id in Model.DaftarIdFoto)
        {
            <img src="@Url.Action("Foto", "File", new {Area = "", id=id})" class="img-fluid" />
        }
    </div>
</div>

<!-- Akhir Tombol Pilihan Gambar -->
<!-- Modal Upload Foto -->
<div class="modal fade" id="modal@(Id)" data-bs-backdrop="static" tabindex="-1" aria-labelledby="#modal@(Id)" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="#modal@(Id)">Pilih Gambar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <input class="form-control" id="formFile" name="formFile" data-val="true" type="file" />
                            <span class="text-danger" id="formFileVal"></span>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div class="col" id="daftarMahasiswa">
                            <vc:mahasiswa-picker input-name=@nameof(TambahVM.DaftarIdMahasiswa) multi=true></vc:mahasiswa-picker>
                        </div>
                    </div>
                    <div class="row mt-4 mb-4">
                        <div class="col-12">
                            <button type="button" class="btn btn-custom w-100" id="uploadFoto" onsubmit="uploadFoto">Upload</button>
                        </div>
                    </div>
                    <div class="row" id="fotoGrid@(Id)">
                        @foreach (var foto in Model.DaftarFoto)
                        {
                            <div class="col-3 p-1 foto-container@(Id)">
                                <input id="fotoId" value="@foto.Id" hidden />
                                <img class="img-thumbnail" src="@Url.Action("Foto", "File", new {Area = "", id = foto.Id})" />
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="selesai" class="btn btn-custom" data-bs-dismiss="modal">Selesai</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
        </div>
    </div>
</div>
<!-- Akhir Modal Upload Foto -->
<!--Script JS -->

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        $(function () {
            const makeGetUrl = (id) => `/File/Foto/${id}`;

            const inputName = '@(Model.Name)';
            const multi = @(Model.Multi.ToString().ToLower());
            const inputContainer = $('#input-container@(Id)')
            const preview = $('#previewFoto@(Id)');
            const selectedClass = 'selected';

            let daftarFotoContainer = $('.foto-container@(Id)');
            let idFotoTerpilih = 0;
            let daftarIdFoto = [];

            const updateUI = () => {
                daftarFotoContainer.each((index, item) => {
                    const idFoto = $(item).find('input#fotoId').val();

                    if (idFoto === idFotoTerpilih) {
                        $(item).addClass(selectedClass);
                    } else {
                        $(item).removeClass(selectedClass);
                    }
                });
            };

            const onFotoContainerClick = function () {
                const selected = $(this).hasClass(selectedClass);
                const idFoto = $(this).find('input#fotoId').val();

                if (multi) {
                    if (selected) {
                        daftarIdFoto = [...daftarIdFoto.filter((value) => value !== idFoto)];
                    } else {
                        daftarIdFoto.push(idFoto);
                    }

                    $(this).toggleClass(selectedClass);
                } else {
                    idFotoTerpilih = idFoto;
                    updateUI();
                }
            };

            $('button#selesai').on('click', function () {
                preview.html('');
                inputContainer.html('');

                if (multi) {
                    for (let idFoto of daftarIdFoto) {
                        inputContainer.append(`<input type="text" name="${inputName}" id="${inputName}" value="${idFoto}" hidden />`);
                        preview.append(`<img src="${makeGetUrl(idFoto)}" class="img-fluid"/>`)
                    }
                } else {
                    inputContainer.append(`<input type="text" name="${inputName}" id="${inputName}" value="${idFotoTerpilih}" hidden />`);
                    preview.append(`<img src="${makeGetUrl(idFotoTerpilih)}" class="img-fluid"/>`)
                }
            });

            const init = () => {
                daftarFotoContainer.each((index, item) => $(item).on('click', onFotoContainerClick));

                if (multi) {
                    inputContainer.find(`input#${inputName}`).each((index, item) => {
                        const idFoto = $(item).val();
                        daftarIdFoto.push(idFoto);
                        daftarFotoContainer
                            .filter((index, item) => $(item).find('input#fotoId').val() == idFoto)
                            .first().addClass(selectedClass);
                    });
                } else {
                    const idFoto = inputContainer.find(`input#${inputName}`).first().val();
                    if (idFoto) {
                        idFotoTerpilih = idFoto;
                        daftarFotoContainer
                            .filter((index, item) => $(item).find('input#fotoId').val() == idFoto)
                            .first().addClass(selectedClass);
                    }
                }
            }

            $('#uploadFoto').on('click', async function () {
                const formData = new FormData();
                const inputFile = $('#formFile')[0].files[0];
                const daftarIdMahasiswa = $('#daftarMahasiswa input#@(nameof(TambahVM.DaftarIdMahasiswa))');

                formData.append('@(nameof(TambahVM.FormFile))', inputFile);

                daftarIdMahasiswa
                    .each((index, item) => formData.append('@(nameof(TambahVM.DaftarIdMahasiswa))', $(item).val()));

                $('#formFileVal').html('');

                $(this).html('');
                $(this).append('Loading...');
                $(this).prop('disabled', true);

                const response = await fetch(
                    '/Dashboard/Foto/Tambah?isJson=true',
                    {
                        credentials: 'same-origin',
                        method: "POST",
                        body: formData,
                    }
                );

                if (response.ok) {
                    const data = await response.json();

                    console.log(daftarFotoContainer.first());

                    const newFotoContainer = `<div class="col-3 p-1 foto-container@(Id)">
                                                <input type="text" id="fotoId" value="${data}" hidden />
                                                <img class="img-thumbnail" src="${makeGetUrl(data)}" />
                                              </div>`;

                    let elementCount = 0;

                    daftarFotoContainer.each((index, item) => elementCount++);

                    if (elementCount > 0) {
                        daftarFotoContainer.first().before(newFotoContainer);
                    } else {
                        $('#fotoGrid@(Id)').html(newFotoContainer);
                    }

                    daftarFotoContainer = $('.foto-container@(Id)');

                    daftarFotoContainer
                        .filter((index, item) => $(item).find('input#fotoId').val() == data)
                        .first().on('click', onFotoContainerClick);
                } else {
                    const data = await response.json();

                    $('#formFileVal').html('');
                    $('#formFileVal').append(data['@(nameof(TambahVM.FormFile))']);
                }

                $(this).html('');
                $(this).append('Upload');
                $(this).prop('disabled', false);
            });

            init();
        });
    });
</script>