@using Newtonsoft.Json;
@using webSITE.Services.Contracts;
@inject INotificationService NotificationService

<link href="~/lib/toastr/css/toastr.min.css" rel="stylesheet" />
<script src="~/lib/toastr/js/toastr.min.js"></script>

@{
    var notifications = TempData[NotificationService.TempDataKey] == null ? 
        new List<ToastrNotification>() : 
        JsonConvert
            .DeserializeObject<List<ToastrNotification>>(TempData[NotificationService.TempDataKey] as string);
}

@foreach (var notification in notifications)
{
    var guid = string.Join("", Guid.NewGuid().ToString().Split("-"));

    <script type="text/javascript">

        const title_@guid = "@notification.Title";
        const message_@guid = "@notification.Message";

    </script>

    switch (notification.Type)
    {
        case ToastrNotificationType.Info:
            <script type="text/javascript">
                toastr.info(message_@guid, title_@guid);
            </script>
            break;

        case ToastrNotificationType.Success:
            <script type="text/javascript">
                toastr.success(message_@guid, title_@guid);
            </script>
            break;

        case ToastrNotificationType.Warning:
            <script type="text/javascript">
                toastr.warning(message_@guid, title_@guid);
            </script>
            break;

        case ToastrNotificationType.Error:
            <script type="text/javascript">
                toastr.error(message_@guid, title_@guid);
            </script>
            break;
    }
}