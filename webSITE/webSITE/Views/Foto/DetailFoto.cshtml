@* @model List<Foto>
@{
    ViewData["Title"] = "Detail";
    ViewData["Active"] = "Album";
}

<div class="slider">

    <div class="menu px-4 d-flex justify-content-between align-items-center animate__animated animate__fadeInDown">
        <a asp-action="Album" asp-route-idKegiatan="@ViewData["IdKegiatan"]" class="close">&times;</a>
        <h3 class="text-center m-0">@ViewData["NamaKegiatan"]</h3>
        <a id="detail">&iexcl;</a>
    </div>

    <div class="details">
        <div class="d-flex justify-content-between align-items-center px-4">
            <button class="close me-4">&times;</button>
            <h5>Detail Foto</h5>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <label for="tanggalFoto">Tanggal Upload</label>
                    <div id="tanggalFoto"></div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-12">
                    <label for="daftarMahasiswa">Dalam Foto:</label>
                    <div id="daftarMahasiswa"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="list">
        @foreach (var foto in Model)
        {
            var daftarMahasiswa = string.Join(", ", foto.DaftarMahasiswa.Select(m => m.NamaLengkap));
            <div class="item d-flex justify-content-center align-items-center">
                <input id="idFoto" type="text" hidden="hidden" value="@foto.Id">
                <input id="tanggalFoto" type="text" hidden="hidden" value="@foto.AddedAt    .ToShortDateString()">
                <input id="daftarMahasiswa" type="text" hidden="hidden" value="@daftarMahasiswa">
                <img src="@Url.Action("Foto", "File", new {Area = "", Id = foto.Id})" />
            </div>
        }
    </div>

    <!--button slide-->
    <div class="buttons">
        <button id="prev">&#60;</button>
        <button id="next">&#62;</button>
    </div>

    <!--dots-->
    <ul class="dots animate__animated animate__fadeInUp">
        @foreach (var foto in Model)
        {
            <li>
                <img src="@Url.Action("Foto", "File", new {Id = foto.Id, Area=""})" />
            </li>
        }
    </ul>

</div>


<style>
    .grabbing {
        cursor: grabbing;
    }

    .hidden {
        display: none !important;
    }

    footer {
        display: none;
    }

    .copyrightText {
        display: none;
    }
</style>

@section Scripts {

    <script type="text/javascript">
        $('document').ready(function () {
            const details = $('.details');
            const slider = $('.slider');
            const items = $('.item');
            const prevBtn = $('#prev');
            const nextBtn = $('#next');
            const dots = $('.dots li');
            const detailBtn = $('#detail');
            const closeDetailBtn = $('.details .close');
            const menu = $('.menu');

            const activeIndex = @ViewData["SelectedIndex"];
            const idKegiatan = @(ViewData["IdKegiatan"] ?? "null");

            let index = 0;
            let isDragging = false;
            let startPos = 0;
            let holdTimeout;

            const updateDetails = () => {
                const idFoto = $(items[index]).find('#idFoto').val();
                const tanggalFoto = $(items[index]).find('#tanggalFoto').val();
                const daftarMahasiswa = $(items[index]).find('#daftarMahasiswa').val();

                $(details).find('#formHapus').attr('action', '/Foto/Delete/' + idFoto + '?returnUrl=%2FFoto%2FDetailFoto%3FidKegiatan%3D' + idKegiatan);

                $(details).find('#tanggalFoto').text(tanggalFoto);
                $(details).find('#daftarMahasiswa').text(daftarMahasiswa);
            };

            const updateDots = () => {
                $(dots).each((i, item) => {
                    if (i === index) {
                        $(item).addClass('active');
                    } else {
                        $(item).removeClass('active');
                    }
                });
            }

            const showSlide = () => {
                $(items).each((i, item) => {
                    if (index === i) {
                        $(item).css({
                            "opacity": "1",
                            "pointerEvents": "auto"
                        });
                    } else {
                        $(item).css({
                            "opacity": "0",
                            "pointerEvents": "none"
                        });
                    }
                });

                updateDots();
                updateDetails();
            };

            const nextSlide = () => {
                index = (index + 1) % items.length;
                showSlide();
            }

            const prevSlide = () => {
                index = (index - 1 + items.length) % items.length;
                showSlide();
            }

            const startDrag = (e) => {
                isDragging = true;
                startPos = e.pageX || e.originalEvent.touches[0].pageX;
                slider.addClass('grabbing');
            };

            const onDrag = (e) => {
                if (!isDragging) return;

                const currentPosition = e.pageX || e.originalEvent.touches[0].pageX;
                const diff = currentPosition - startPos;

                if (diff > 50) {
                    prevSlide();
                    isDragging = false;
                } else if (diff < -50) {
                    nextSlide();
                    isDragging = false;
                }
            };

            const endDrag = () => {
                isDragging = false;
                slider.removeClass('grabbing');
            };

            const hideElements = () => {
                // menu.hide();
                // details.hide();
                // $('.dots').hide();
                menu.addClass('hidden');
                details.addClass('hidden');
                $('.dots').addClass('hidden');
            };

            const showElements = () => {
                // menu.show();
                // details.show();
                // $('.dots').show();
                menu.removeClass('hidden');
                details.removeClass('hidden');
                $('.dots').removeClass('hidden');
            };

            $(prevBtn).on('click', prevSlide);
            $(nextBtn).on('click', nextSlide);

            $(detailBtn).on('click', () => {
                details.addClass('open');
            });

            $(closeDetailBtn).on('click', () => {
                details.removeClass('open');
            });

            $(dots).each((i, item) => {
                $(item).on('click', () => {
                    index = i;
                    showSlide();
                });
            });

            slider.on('mousedown touchstart', (e) => {
                startDrag(e);
                holdTimeout = setTimeout(hideElements, 500);
            });

            slider.on('mousemove touchmove', onDrag);

            slider.on('mouseup touchend', () => {
                clearTimeout(holdTimeout);
                endDrag();
                showElements();
            });

            slider.on('mouseleave', () => {
                clearTimeout(holdTimeout);
                endDrag();
                showElements();
            });

            index = activeIndex;
            showSlide();
        });


    </script>
} *@