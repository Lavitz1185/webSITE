// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webSITE.Repositori.Data;

#nullable disable

namespace webSITE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240106061245_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webSITE.Models.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdKegiatan")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdKegiatan");

                    b.ToTable("TblFoto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdKegiatan = 1,
                            PhotoPath = "/img/contoh.jpeg",
                            Tanggal = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IdKegiatan = 1,
                            PhotoPath = "/img/contoh.jpeg",
                            Tanggal = new DateTime(2023, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IdKegiatan = 1,
                            PhotoPath = "/img/contoh.jpeg",
                            Tanggal = new DateTime(2023, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            IdKegiatan = 1,
                            PhotoPath = "/img/contoh.jpeg",
                            Tanggal = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            IdKegiatan = 1,
                            PhotoPath = "/img/contoh.jpeg",
                            Tanggal = new DateTime(2023, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("webSITE.Models.Kegiatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKegiatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TanggalBerakhir")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TanggalMulai")
                        .HasColumnType("datetime2");

                    b.Property<string>("TempatKegiatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblKegiatan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Keterangan = "Kegiatan Pertama",
                            NamaKegiatan = "Kegiatan 1",
                            TanggalBerakhir = new DateTime(2023, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalMulai = new DateTime(2023, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TempatKegiatan = "Undana"
                        });
                });

            modelBuilder.Entity("webSITE.Models.Mahasiswa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPanggilan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TanggalLahir")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblMahasiswa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34041a30-8807-43d7-a5b9-a6519c6e9597",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080051",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "094b3a2b-13ab-450e-ab4d-1cec50c4e4b1",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d5b4928b-d297-4345-954c-8382dd5a294c",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080052",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "8bdba0a6-a14b-441b-aa82-3a1ae8eee92f",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3d4c13d1-2efe-4989-b60b-5209bada9419",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080053",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "475443b8-4d1e-42e3-ab16-dad87f056515",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b68c0e30-c6ff-465d-8269-a1d51bd135ce",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080054",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "9c74d879-34c4-4f4c-ab79-dc483538cc34",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01472c61-c064-4dc8-8baf-d30bd24f7aff",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080055",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "26edfc02-cad6-42ad-9cc9-859da64979cd",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c82961fa-1a8c-485c-99c8-595e43624407",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080056",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "c046a7ac-f662-45cf-9c93-70ab148146c0",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "384bafba-f162-4a9f-84b1-fa78e5890fee",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080057",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "68f6b256-fa1b-44d7-8fe8-690441f25459",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87848c38-bdcd-4d52-9e3f-703ad8627b47",
                            EmailConfirmed = false,
                            JenisKelamin = 0,
                            LockoutEnabled = false,
                            NamaLengkap = "Adi Juanito Taklal",
                            NamaPanggilan = "Adi",
                            Nim = "2206080058",
                            PhoneNumberConfirmed = false,
                            PhotoPath = "/img/contoh.jpeg",
                            SecurityStamp = "645c8925-0053-4a23-9700-187c940fce27",
                            TanggalLahir = new DateTime(2004, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("webSITE.Models.MahasiswaFoto", b =>
                {
                    b.Property<int>("IdFoto")
                        .HasColumnType("int");

                    b.Property<int>("IdMahasiswa")
                        .HasColumnType("int");

                    b.HasKey("IdFoto", "IdMahasiswa");

                    b.HasIndex("IdMahasiswa");

                    b.ToTable("TblMahasiswaFoto");

                    b.HasData(
                        new
                        {
                            IdFoto = 1,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdFoto = 1,
                            IdMahasiswa = 2
                        },
                        new
                        {
                            IdFoto = 2,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdFoto = 2,
                            IdMahasiswa = 2
                        },
                        new
                        {
                            IdFoto = 3,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdFoto = 3,
                            IdMahasiswa = 2
                        },
                        new
                        {
                            IdFoto = 4,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdFoto = 4,
                            IdMahasiswa = 2
                        },
                        new
                        {
                            IdFoto = 5,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdFoto = 5,
                            IdMahasiswa = 2
                        });
                });

            modelBuilder.Entity("webSITE.Models.PesertaKegiatan", b =>
                {
                    b.Property<int>("IdKegiatan")
                        .HasColumnType("int");

                    b.Property<int>("IdMahasiswa")
                        .HasColumnType("int");

                    b.HasKey("IdKegiatan", "IdMahasiswa");

                    b.HasIndex("IdMahasiswa");

                    b.ToTable("TblPesertaKegiatan");

                    b.HasData(
                        new
                        {
                            IdKegiatan = 1,
                            IdMahasiswa = 1
                        },
                        new
                        {
                            IdKegiatan = 1,
                            IdMahasiswa = 2
                        });
                });

            modelBuilder.Entity("webSITE.Models.Foto", b =>
                {
                    b.HasOne("webSITE.Models.Kegiatan", "Kegiatan")
                        .WithMany("DaftarFoto")
                        .HasForeignKey("IdKegiatan");

                    b.Navigation("Kegiatan");
                });

            modelBuilder.Entity("webSITE.Models.MahasiswaFoto", b =>
                {
                    b.HasOne("webSITE.Models.Foto", null)
                        .WithMany()
                        .HasForeignKey("IdFoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webSITE.Models.Mahasiswa", null)
                        .WithMany()
                        .HasForeignKey("IdMahasiswa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webSITE.Models.PesertaKegiatan", b =>
                {
                    b.HasOne("webSITE.Models.Kegiatan", null)
                        .WithMany()
                        .HasForeignKey("IdKegiatan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webSITE.Models.Mahasiswa", null)
                        .WithMany()
                        .HasForeignKey("IdMahasiswa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webSITE.Models.Kegiatan", b =>
                {
                    b.Navigation("DaftarFoto");
                });
#pragma warning restore 612, 618
        }
    }
}
